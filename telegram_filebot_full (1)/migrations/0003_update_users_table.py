"""Migration script برای به‌روزرسانی جدول users"""
from alembic import op
import sqlalchemy as sa


def upgrade():
    # ایجاد enum ها
    user_role_enum = sa.Enum('user', 'moderator', 'admin', 'super_admin', name='userrole')
    user_status_enum = sa.Enum(
        'active',
        'inactive',
        'suspended',
        'blocked',
        'pending_verification',
        'deleted',
        name='userstatus',
    )
    block_type_enum = sa.Enum('temporary', 'permanent', 'spam', 'abuse', 'manual', 'automated', name='blocktype')
    language_enum = sa.Enum('fa', 'en', 'ar', name='language')

    # تغییر نوع telegram_id
    op.alter_column('users', 'telegram_id', type_=sa.BigInteger)

    # تغییر نام ستون username
    op.alter_column('users', 'username', new_column_name='telegram_username')

    # افزودن ستون‌های جدید
    op.add_column('users', sa.Column('first_name', sa.String(100), nullable=False, server_default=''))
    op.add_column('users', sa.Column('last_name', sa.String(100)))
    op.add_column('users', sa.Column('display_name', sa.String(150)))
    op.add_column('users', sa.Column('language_code', language_enum, default='fa'))
    op.add_column('users', sa.Column('role', user_role_enum, default='user'))
    op.add_column('users', sa.Column('status', user_status_enum, default='active'))
    op.add_column('users', sa.Column('bio', sa.Text))
    op.add_column('users', sa.Column('phone_number', sa.String(20)))
    op.add_column('users', sa.Column('email', sa.String(255)))
    op.add_column('users', sa.Column('timezone', sa.String(50), default='Asia/Tehran'))
    op.add_column('users', sa.Column('permissions', sa.Text))
    op.add_column('users', sa.Column('is_active', sa.Boolean, default=True))
    op.add_column('users', sa.Column('is_verified', sa.Boolean, default=False))
    op.add_column('users', sa.Column('is_premium', sa.Boolean, default=False))
    op.add_column('users', sa.Column('is_bot', sa.Boolean, default=False))
    op.add_column('users', sa.Column('block_type', block_type_enum))
    op.add_column('users', sa.Column('blocked_at', sa.DateTime))
    op.add_column('users', sa.Column('blocked_until', sa.DateTime))
    op.add_column('users', sa.Column('blocked_by', sa.String(36)))
    op.add_column('users', sa.Column('unblocked_at', sa.DateTime))
    op.add_column('users', sa.Column('unblocked_by', sa.String(36)))
    op.add_column('users', sa.Column('password_hash', sa.String(128)))
    op.add_column('users', sa.Column('api_key', sa.String(64), unique=True))
    op.add_column('users', sa.Column('two_factor_enabled', sa.Boolean, default=False))
    op.add_column('users', sa.Column('security_settings', sa.Text))
    op.add_column('users', sa.Column('last_activity_at', sa.DateTime))
    op.add_column('users', sa.Column('last_message_at', sa.DateTime))
    op.add_column('users', sa.Column('login_count', sa.Integer, default=0))
    op.add_column('users', sa.Column('message_count', sa.Integer, default=0))
    op.add_column('users', sa.Column('file_upload_count', sa.Integer, default=0))
    op.add_column('users', sa.Column('file_download_count', sa.Integer, default=0))
    op.add_column('users', sa.Column('user_settings', sa.Text))
    op.add_column('users', sa.Column('notification_settings', sa.Text))
    op.add_column('users', sa.Column('privacy_settings', sa.Text))
    op.add_column('users', sa.Column('referral_code', sa.String(20), unique=True))
    op.add_column('users', sa.Column('referred_by', sa.String(36)))
    op.add_column('users', sa.Column('referral_count', sa.Integer, default=0))
    op.add_column('users', sa.Column('total_storage_used', sa.BigInteger, default=0))
    op.add_column('users', sa.Column('total_files_count', sa.Integer, default=0))
    op.add_column('users', sa.Column('total_downloads', sa.Integer, default=0))
    op.add_column('users', sa.Column('client_info', sa.Text))
    op.add_column('users', sa.Column('device_id', sa.String(100)))
    op.add_column('users', sa.Column('created_at', sa.DateTime, server_default=sa.text('CURRENT_TIMESTAMP')))
    op.add_column('users', sa.Column('updated_at', sa.DateTime))
    op.add_column('users', sa.Column('deleted_at', sa.DateTime))
    op.add_column('users', sa.Column('first_seen_at', sa.DateTime))
    op.add_column('users', sa.Column('last_seen_at', sa.DateTime))

    # ایجاد index ها
    op.create_index('idx_users_telegram_id', 'users', ['telegram_id'])
    op.create_index('idx_users_username', 'users', ['telegram_username'])
    op.create_index('idx_users_status', 'users', ['status'])
    op.create_index('idx_users_role', 'users', ['role'])
    op.create_index('idx_users_active', 'users', ['is_active'])
    op.create_index('idx_users_blocked', 'users', ['is_blocked'])
    op.create_index('idx_users_created_at', 'users', ['created_at'])
    op.create_index('idx_users_last_activity', 'users', ['last_activity_at'])
    op.create_index('idx_users_referral_code', 'users', ['referral_code'])
    op.create_index('idx_users_deleted_at', 'users', ['deleted_at'])
    op.create_index('idx_users_premium', 'users', ['is_premium'])
    op.create_index('idx_users_verified', 'users', ['is_verified'])


def downgrade():
    op.drop_index('idx_users_verified', 'users')
    op.drop_index('idx_users_premium', 'users')
    op.drop_index('idx_users_deleted_at', 'users')
    op.drop_index('idx_users_referral_code', 'users')
    op.drop_index('idx_users_last_activity', 'users')
    op.drop_index('idx_users_created_at', 'users')
    op.drop_index('idx_users_blocked', 'users')
    op.drop_index('idx_users_active', 'users')
    op.drop_index('idx_users_role', 'users')
    op.drop_index('idx_users_status', 'users')
    op.drop_index('idx_users_username', 'users')
    op.drop_index('idx_users_telegram_id', 'users')

    op.drop_column('users', 'last_seen_at')
    op.drop_column('users', 'first_seen_at')
    op.drop_column('users', 'deleted_at')
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'created_at')
    op.drop_column('users', 'device_id')
    op.drop_column('users', 'client_info')
    op.drop_column('users', 'total_downloads')
    op.drop_column('users', 'total_files_count')
    op.drop_column('users', 'total_storage_used')
    op.drop_column('users', 'referral_count')
    op.drop_column('users', 'referred_by')
    op.drop_column('users', 'referral_code')
    op.drop_column('users', 'privacy_settings')
    op.drop_column('users', 'notification_settings')
    op.drop_column('users', 'user_settings')
    op.drop_column('users', 'file_download_count')
    op.drop_column('users', 'file_upload_count')
    op.drop_column('users', 'message_count')
    op.drop_column('users', 'login_count')
    op.drop_column('users', 'last_message_at')
    op.drop_column('users', 'last_activity_at')
    op.drop_column('users', 'security_settings')
    op.drop_column('users', 'two_factor_enabled')
    op.drop_column('users', 'api_key')
    op.drop_column('users', 'password_hash')
    op.drop_column('users', 'unblocked_by')
    op.drop_column('users', 'unblocked_at')
    op.drop_column('users', 'blocked_by')
    op.drop_column('users', 'blocked_until')
    op.drop_column('users', 'blocked_at')
    op.drop_column('users', 'block_type')
    op.drop_column('users', 'is_bot')
    op.drop_column('users', 'is_premium')
    op.drop_column('users', 'is_verified')
    op.drop_column('users', 'is_active')
    op.drop_column('users', 'permissions')
    op.drop_column('users', 'timezone')
    op.drop_column('users', 'email')
    op.drop_column('users', 'phone_number')
    op.drop_column('users', 'bio')
    op.drop_column('users', 'status')
    op.drop_column('users', 'role')
    op.drop_column('users', 'language_code')
    op.drop_column('users', 'display_name')
    op.drop_column('users', 'last_name')
    op.drop_column('users', 'first_name')
    op.alter_column('users', 'telegram_username', new_column_name='username')
    op.alter_column('users', 'telegram_id', type_=sa.Integer)
